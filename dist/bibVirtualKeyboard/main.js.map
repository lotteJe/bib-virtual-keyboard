{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-tab-group>\\n  <mat-tab>\\n    <ng-template mat-tab-label>\\n      <mat-icon>book</mat-icon> ZOEKEN IN DE CATALOGUS </ng-template>\\n    <form novalidate class=\\\"content content-test-form\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"form.valid && submitForm(form)\\\">\\n      <section class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <mat-input-container>\\n            <input matInput matKeyboard placeholder=\\\"Zoekterm\\\" name=\\\"zoekterm\\\" [(ngModel)]=\\\"zoekValue\\\" (enterClick)=\\\"submitForm(form)\\\">\\n          </mat-input-container>\\n        </div>\\n      </section>\\n      <section class=\\\"row\\\">\\n        <button mat-raised-button type=\\\"submit\\\" aria-label=\\\"Submit form\\\">\\n          ZOEKEN\\n        </button>\\n      </section>\\n    </form>\\n    <div>\\n      <div *ngIf=\\\"resultaten.length > 0 as value; else noResult\\\">\\n        <!-- <div class=\\\"row\\\">-->\\n        <ngx-masonry [options]=\\\"{ transitionDuration: '1s' }\\\" [useImagesLoaded]=\\\"true\\\">\\n          <ngxMasonryItem class=\\\"masonry-item\\\" *ngFor=\\\"let resultaat of resultaten\\\">\\n            <!--  <div class=\\\"col\\\">-->\\n            <mat-card class=\\\"card\\\">\\n              <mat-card-header>\\n                <mat-card-title class=\\\"title\\\">{{resultaat.titles[0].title[0]._}}</mat-card-title>\\n                <mat-card-subtitle class=\\\"subtitle\\\" *ngIf=\\\"isUndefined(resultaat.authors) as value; else elseBlock\\\">\\n                </mat-card-subtitle>\\n                <ng-template #elseBlock>\\n                  <mat-card-subtitle>\\n                    {{ resultaat.authors[0]['main-author'][0]._}}\\n                  </mat-card-subtitle>\\n                </ng-template>\\n              </mat-card-header>\\n\\n              <img mat-card-image src=\\\"{{getUrl(resultaat)}}\\\" alt=\\\"CoverImage\\\">\\n              <mat-card-content>\\n\\n                {{resultaat.summaries? resultaat.summaries[0].summary[0]._ : \\\"\\\"}}\\n              </mat-card-content>\\n              <mat-card-actions>\\n                <a href=\\\"{{resultaat['detail-page']}}\\\" target=\\\"_blank\\\" mat-button>MEER INFO</a>\\n              </mat-card-actions>\\n              <!-- <div *ngIf=\\\"isArray(resultaat.types.type) as value; else elseBlockType\\\">\\n                <mat-chip-list>\\n                  <mat-chip *ngFor=\\\"let t of resultaat.types.type\\\" selected=\\\"true\\\" color=\\\"warn\\\">{{t}}</mat-chip>\\n                </mat-chip-list>\\n              </div>\\n              <ng-template #elseBlockType>\\n                <div>\\n                  <mat-chip-list>\\n                    <mat-chip selected=\\\"true\\\" color=\\\"warn\\\"> {{resultaat.types.type}}\\n                    </mat-chip>\\n                  </mat-chip-list>\\n                </div>\\n              </ng-template>-->\\n            </mat-card>\\n            <!--  </div>-->\\n          </ngxMasonryItem>\\n        </ngx-masonry>\\n        <!-- </div>-->\\n      </div>\\n      <ng-template #noResult>\\n        <div *ngIf=\\\"!first\\\">\\n          <img class=\\\"noresult\\\" src=\\\"assets/noresultTextDown.png\\\">\\n        </div>\\n      </ng-template>\\n    </div>\\n    <div>\\n      <div>\\n      </div>\\n    </div>\\n  </mat-tab>\\n</mat-tab-group>\"","module.exports = \".content {\\n  margin: 40px 32px; }\\n\\n.row {\\n  align-items: center;\\n  display: -ms-grid;\\n  display: grid;\\n  grid-gap: 16px;\\n  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\\n  padding: 8px; }\\n\\n.content-test-form .row:last-of-type > .col:last-of-type {\\n    align-self: flex-start;\\n    padding-top: 8px; }\\n\\n.col {\\n  position: relative; }\\n\\n.col > .mat-input-container {\\n    display: block; }\\n\\n.mat-raised-button {\\n  width: 100%; }\\n\\n.mat-select + .mat-raised-button {\\n    margin-top: 24px; }\\n\\n.mat-select {\\n  display: block; }\\n\\npre {\\n  background-color: #e0e0e0;\\n  border-radius: 3px;\\n  display: block;\\n  font: 11px/1.5 Monospaced, monospace;\\n  margin: 8px 0;\\n  min-height: 16px;\\n  padding: 4px 8px;\\n  white-space: normal; }\\n\\n.card {\\n  max-width: 180px; }\\n\\n.noresult {\\n  max-width: 70%;\\n  display: block;\\n  margin: auto; }\\n\\n.masonry-item {\\n  margin: 0 10px 10px 10px;\\n  background-color: #f1f1f1;\\n  background-size: cover;\\n  width: 180px; }\\n\\nmat-card-content {\\n  font-size: 12px; }\\n\"","import { Subscription } from 'rxjs/Subscription';\nimport { Component, Inject, LOCALE_ID, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { IKeyboardLayout, MatKeyboardComponent, MatKeyboardRef, MatKeyboardService } from '@ngx-material-keyboard/core';\nimport { DataService } from './data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  private _enterSubscription: Subscription;\n  private _keyboardRef: MatKeyboardRef<MatKeyboardComponent>;\n  private _zoekterm: string;\n\n  public first = true;\n  public resultaten = [];\n\n  get zoekterm(): string {\n    return this._zoekterm;\n  }\n\n  darkTheme: boolean;\n  duration: number;\n  isDebug: boolean;\n  defaultLocale: string;\n  layout: string;\n  layouts: {\n    name: string;\n    layout: IKeyboardLayout;\n  }[];\n  zoekValue = '';\n\n  get keyboardVisible(): boolean {\n    return this._keyboardService.isOpened;\n  }\n\n  constructor(private _keyboardService: MatKeyboardService,\n    @Inject(LOCALE_ID) public locale, private _dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    this.defaultLocale = ` ${this.locale}`.slice(1);\n  }\n\n  ngOnDestroy() {\n    this.closeCurrentKeyboard();\n  }\n\n  submitForm(form?: NgForm) {\n    const temp = form.controls[\"zoekterm\"].value;\n    this._zoekterm = temp.replace(/\\s/g, \"%20\");\n\n    if (typeof this._zoekterm !== \"undefined\") {\n      this._dataService.search(this._zoekterm)\n        .subscribe(response => {\n          if (response.aquabrowser.results[0].result !== undefined) {\n            this.resultaten = response.aquabrowser.results[0].result;\n            console.log(this.resultaten);\n          }\n          else {\n            this.resultaten.length = 0;\n          }\n        });\n    }\n    this.first = false;\n  }\n\n  isUndefined(authors) {\n    return (typeof authors === \"undefined\");\n  }\n\n  openKeyboard(locale = this.defaultLocale) {\n    this._keyboardRef = this._keyboardService.open(locale, {\n      darkTheme: this.darkTheme,\n      duration: this.duration,\n      isDebug: this.isDebug\n    });\n    this._enterSubscription = this._keyboardRef.instance.enterClick.subscribe(() => {\n      this.submitForm();\n    });\n  }\n\n  closeCurrentKeyboard() {\n    if (this._keyboardRef) {\n      this._keyboardRef.dismiss();\n    }\n\n    if (this._enterSubscription) {\n      this._enterSubscription.unsubscribe();\n    }\n  }\n\n  isArray(obj: any) {\n    return Array.isArray(obj)\n  }\n\n  getUrl(url: any) {\n    if (url.coverimages != undefined) {\n      const temp = url.coverimages[0].coverimage[0]._.replace(/&amp;/g, \"&\").replace('small', 'large');\n      return temp;\n    }\n    else\n      return (\"assets/noimage.png\");\n  }\n}","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { MaterialModule } from './material/material.module';\n\nimport { IKeyboardLayouts, keyboardLayouts, MAT_KEYBOARD_LAYOUTS, MatKeyboardModule } from '@ngx-material-keyboard/core';\n\nimport { AppComponent } from './app.component';\n\nimport { DataService } from './data.service';\nimport { LOCALE_ID } from '@angular/core';\n\nimport { NgxMasonryModule } from 'ngx-masonry';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    // Angular modules\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n\n    // Material modules\n    MaterialModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n    MatKeyboardModule,\n    MatChipsModule,\n\n    //Masonary\n    NgxMasonryModule,\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'nl-BE' },\n    DataService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n@Injectable()\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  search(search: string): Observable<any> {\n    const url = 'http://localhost:8080/api/' + search;\n    return this.http.get(url);\n  }\n}","import { NgModule } from '@angular/core';\n\nimport {\n  MatButtonModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule\n  ]\n})\nexport class MaterialModule {}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}